C51 COMPILER V9.54   LED                                                                   11/02/2020 09:13:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Objects\led.obj
COMPILER INVOKED BY: e:\Keil_v5\C51\BIN\C51.EXE led.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\led.l
                    -st) OBJECT(.\Objects\led.obj)

line level    source

   1          #include "led.h"
   2          
   3          u16 code num[10] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f} ;
   4          u8 time_for_set = 30 ; 
   5          u8 level_for_temperature = 0 , level_for_foot = 0 ; 
   6          
   7          void set_display(u16 display_data) 
   8          {
   9   1              LED1 = 0 ; LED2 = 0 ; LED3 = 0 ; LED4 = 0 ; 
  10   1              LED5 = 0 ; LED6 = 0 ; LED7 = 0 ; LED8 = 0 ; 
  11   1      
  12   1              if(display_data & 0x01)
  13   1                      LED6 = 1 ; 
  14   1              if(display_data & 0x02)
  15   1                      LED5 = 1 ;
  16   1              if(display_data & 0x04)
  17   1                      LED1 = 1 ; 
  18   1              if(display_data & 0x08)
  19   1                      LED4 = 1 ; 
  20   1      
  21   1              if(display_data & 0x10)
  22   1                      LED2 = 1 ; 
  23   1              if(display_data & 0x20)
  24   1                      LED7 = 1 ; 
  25   1              if(display_data & 0x40)
  26   1                      LED8 = 1 ; 
  27   1              if(display_data & 0x80)
  28   1                      LED3 = 1 ;      
  29   1      }
  30          /**************************************************/
  31          void display_time()             //在此可以用状态机来实现以下各种if的判断以及数码管的迁移
  32          {
  33   1              static  u8 flag_display = 1 ; 
  34   1              
  35   1              if((time_display_delay >= display_delay) && (flag_display == 1)) //动态扫描间隔大于20毫秒，且先点亮第一位
             -数码管
  36   1      //      if(flag_display == 1)
  37   1              {
  38   2                      ds1 = 0 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 0 ; ds5 = 0 ; //全部关闭，送完数据后再重新打开
  39   2                      set_display(num[time_for_set/10]) ; 
  40   2                      time_display_delay = 0 ; 
  41   2                      flag_display = 2 ; 
  42   2                      _nop_() ; _nop_() ; 
  43   2                      ds2 = 1 ;                                                                                       //重开位选
  44   2              }
  45   1              
  46   1              if((time_display_delay >= display_delay) && (flag_display == 2))
  47   1      //      if(flag_display == 2)
  48   1              {
  49   2                      ds1 = 0 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 0 ; ds5 = 0 ; //全部关闭，送完数据后再重新打开
  50   2                      set_display(num[time_for_set%10]) ;
  51   2                      time_display_delay = 0 ; 
  52   2                      flag_display = 3 ;
  53   2                      _nop_() ; _nop_() ;
C51 COMPILER V9.54   LED                                                                   11/02/2020 09:13:01 PAGE 2   

  54   2                      ds1 = 1 ;                                                                                       //重开位选
  55   2              }
  56   1      /***********************************************************/   
  57   1              if((time_display_delay >= display_delay) && (flag_display == 3)) //动态扫描间隔大于20毫秒，且先点亮第一位
             -数码管
  58   1      //      if(flag_display == 3)
  59   1              {
  60   2                      ds1 = 0 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 0 ; ds5 = 0 ; //全部关闭，送完数据后再重新打开 
  61   2                      set_display(num[level_for_temperature]) ; 
  62   2                      time_display_delay = 0 ; 
  63   2                      flag_display = 4 ; 
  64   2                      _nop_() ; _nop_() ;
  65   2                      ds3 = 1 ;                                                                                       //重开位选
  66   2              }
  67   1      /***********************************************************/   
  68   1              if((time_display_delay >= display_delay) && (flag_display == 4))
  69   1      //      if(flag_display == 4)
  70   1              {
  71   2                      ds1 = 0 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 0 ; ds5 = 0 ; //全部关闭，送完数据后再重新打开
  72   2                      set_display(num[level_for_foot/10]) ;
  73   2                      time_display_delay = 0 ; 
  74   2                      flag_display = 5 ;
  75   2                      _nop_() ; _nop_() ;
  76   2                      ds4 = 1 ;                                                                                       //重开位选
  77   2              }
  78   1      
  79   1              if((time_display_delay >= display_delay) && (flag_display == 5))
  80   1      //      if(flag_display == 5)
  81   1              {
  82   2                      ds1 = 0 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 0 ; ds5 = 0 ; //全部关闭，送完数据后再重新打开
  83   2                      set_display(num[level_for_foot%10]) ;
  84   2                      time_display_delay = 0 ; 
  85   2                      flag_display = 1 ;
  86   2                      _nop_() ; _nop_() ;
  87   2                      ds5 = 1 ;                                                                                       //重开位选
  88   2              }
  89   1      /***********************************************************/   
  90   1      }
  91          
  92          //void display_2(u16 temp)  //动态扫描显示函数 显示电压
  93          //{
  94          //      u8 sin , ten , hun , thou       , t_thou ;
  95          //      
  96          //      t_thou = temp/10000 ; 
  97          //      thou   = temp%10000/1000 ; 
  98          //      hun    = temp%10000%1000/100 ;
  99          //      ten    = temp%10000%1000%100/10 ;
 100          //      sin        = temp%10000%1000%100%10 ; 
 101          
 102          //      ds1 = 0 ; ds2 = 1 ;     ds3 = 0 ;       ds4 = 0 ; ds5 = 0 ;     
 103          //      set_display(num[t_thou]) ; 
 104          //      delay(13) ; 
 105          //      
 106          //      ds1 = 1 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 0 ; ds5 = 0 ;
 107          //      set_display(num[thou]) ; 
 108          //      delay(13) ; 
 109          //      
 110          //      ds1 = 0 ; ds2 = 0 ;     ds3 = 1 ;       ds4 = 0 ; ds5 = 0 ;
 111          //      set_display(num[hun]) ; 
 112          //      delay(13) ; 
 113          
 114          //      ds1 = 0 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 1 ;       ds5 = 0 ;
C51 COMPILER V9.54   LED                                                                   11/02/2020 09:13:01 PAGE 3   

 115          //      set_display(num[ten]) ; 
 116          //      delay(13) ;
 117          //      
 118          //      ds1 = 0 ; ds2 = 0 ;     ds3 = 0 ;       ds4 = 0 ;       ds5 = 1 ;
 119          //      set_display(num[sin]) ; 
 120          //      delay(13) ;
 121          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    318    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
